@{
    ViewBag.Title = @TWI.InventoryAutomated.Resources.GlobalResource.MsgBatchIterationTitle;
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<link href="~/Content/font-awesome.css" rel="stylesheet" />

@**@

<div class="row" style="margin:auto;width:85% !important">
    <div style="margin:15px auto;width:100% !important;max-width:100%;border:2px #808080 solid;">
        <div style="background-color: #808080;color: #ffffff;padding: 5px;height: 30px;" id="topHeading">
            <div style="font-weight:bold">@TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle - Select Item(s) For @ViewBag.IterationName & Team: @ViewBag.TeamCode</div>
            <a style="margin-top:-24px;float: right;color: white;" href='@Url.Action("AdminStockCountSheet", "StockCount",Convert.ToInt32(Session["TeamID"]))'><i class="fa fa-arrow-circle-o-left fa-2x"></i></a>
        </div>
        <div class="row">
            <div style="margin:15px auto;width:100% !important;max-width:100%;">
                <div style="width:100% !important;margin:15px;">
                    <div class="row" style="margin:10px !important;" id="SearchSection">
                        <div style="float:left;margin-right:10px;">
                            @Html.Label("Source", new { @class = "control-label" })
                            <select id="ddlAllocationSource" class="form-control">
                                <option value="0">Select Source</option>
                                <option value="1">Navision Inventory</option>
                                <option value="2">New Items</option>
                                @*<option value="2">Deviations Only</option>*@
                                @*<option value="3">Adjustment(s)</option>*@
                            </select>
                        </div>
                        <div style="float:left;margin-right:10px;">
                            @Html.Label("Filter Option", new { @class = "control-label" })
                            <select id="ddlFilterSource" class="form-control">
                                <option value="0">All</option>
                                <option value="1">Variance</option>
                                <option value="2">No Variance</option>
                                @*<option value="2">Deviations Only</option>*@
                                @*<option value="3">Adjustment(s)</option>*@
                            </select>
                        </div>
                        <div style="float:left;margin-right:10px;" id="countsource">
                            @Html.Label("Count", new { @class = "control-label" })
                            @Html.DropDownList("ddlCounts", ViewBag.CountList as SelectList, new { @class = "form-control", @id = "ddlCounts" })
                        </div>
                        <div style="float:left;margin-right:10px;" id="teamsource">
                            @Html.Label("Team", new { @class = "control-label" })
                            @Html.DropDownList("ddlTeams", ViewBag.TeamList as SelectList, new { @class = "form-control", @id = "ddlTeams" })
                        </div>
                        <div style="float:left;margin-right:10px;">
                            @Html.Label("Search Field", new { @class = "control-label" })
                            <select id="ddlSearchField" class="form-control">
                                <option value="0">-- Select Field --</option>
                                <option value="1">Zone Code</option>
                                <option value="2">Bin Code</option>
                                <option value="3">Item No</option>
                            </select>
                        </div>
                        <div style="float:left;margin-right:10px;">
                            @Html.Label("Search Criteria", new { @class = "control-label" })
                            <input type="text" class="form-control" readonly="readonly" placeholder="Enter search value" id="txtSearch" name="txtSearch" width="175" />
                        </div>
                        <div style="float:left !important;margin-top:25px;margin-right:10px;margin-bottom:10px;">
                            <a class="btn btn-primary fa fa-search fa-2x" style="width:45px;height:33px;padding-left:10px;padding-top:1px;" data-toggle="tooltip" title="Add Source Data" onclick="GetSearchItem();"></a>
                        </div>
                        <div style="float:left !important;margin-top:25px;margin-right:10px;margin-bottom:10px;">
                            <a class="btn btn-primary fa fa-save fa-2x" style="width:45px;height:33px;padding-left:10px;padding-top:1px;padding-bottom:3px;" data-toggle="tooltip" title="" onclick="AllocateIems();"></a>
                        </div>
                    </div>
                    <div class="row" style="margin:10px 50px 10px 10px;">
                        <table id="ItemTable" class="table table-striped table-responsive table-bordered">
                            <thead>
                                <tr>
                                    @*<input type="checkbox" id="chkheader" onchange="SelectAllItem();" width="20" height="20" />*@
                                    @*class="datatable_col10PercH"*@
                                    @*class="datatable_col30PercH"*@
                                    @*class="datatable_col10PercH"*@
                                    @*class="datatable_col10PercH"*@
                                    @*class="datatable_col10PercH"*@
                                    <th class="datatable_col1PercH"><input name="select_all" value="1" type="checkbox"></th>
                                    <th class="datatable_col10PercH">Item No</th>
                                    <th class="datatable_col59PercH">Description</th>
                                    <th class="datatable_col10PercH">Zone Code</th>
                                    <th class="datatable_col10PercH">Bin Code</th>
                                    <th class="datatable_col10PercH">Lot No</th>
                                    <th>ID</th>
                                </tr>
                            </thead>
                        </table>
                    </div>
                </div>
            </div>
        </div>
        <div></div>
    </div>
</div>
<link href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap.min.css" rel="stylesheet" />
<link href="https://maxcdn.bootstrapcdn.com/font-awesome/4.7.0/css/font-awesome.min.css" rel="stylesheet" />

@section scripts{
    <script src="//cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap.min.js"></script>

    <script>

        var datatable; var rows_selected = [];

                $(document).ready(function () {

                    datatable = $("#ItemTable").DataTable();
                    $("#ddlSearchField").change(function () {
                        var searchval = $("#ddlSearchField").val();
                        if (searchval === "0") {
                            $("#txtSearch").empty();
                            $("#txtSearch").attr('readonly','true');
                        }
                        else {
                            $("#txtSearch").removeAttr('readonly');
                            $("#txtSearch").empty();
                        }
                    });

                    $("#ddlAllocationSource").change(function () {
                        var selectedval = $("#ddlAllocationSource").val();
                        @*if (selectedval >= 2) {
                            var teamid = '@Convert.ToInt32(Session["TeamID"])';

                            $.ajax({
                                "url" : "/StockCount/GetPreviousCounts?TeamID=" + teamid,
                                "datatype": 'json',
                                "type": 'GET',
                                success: function (data) {
                                    console.log(data);
                                    if (data.success) {
                                        $("#ddlCounts").empty();
                                        for (var i = 0; i < data.data.length; i++) {
                                            var opt = new Option(data.data[i].IterationName,data.data[i].ID);
                                            $("#ddlCounts").append(opt);
                                        }
                                        $("#ddlCounts").val = "0";
                                    }
                                },
                                error: function (error) {
                                }
                            });
                            }
                        else {/* $('#countsource').hide();*/ }*@
                    });

                    $("#ddlCounts").change(function () {
                        var selectedcount = $("#ddlCounts").val();
                        $.ajax({
                            url: "/StockCount/GetTeamInfoByCount?ID=" + selectedcount,
                            type: "GET",
                            dataType: "Json",
                            async:true,
                            success: function (data) {
                                console.log(data);
                                $("#ddlTeams").empty();
                                for (var i = 0; i < data.data.length; i++) {
                                    var teamopt = new Option(data.data[i].TeamCode, data.data[i].ID);
                                    $("#ddlTeams").append(teamopt);
                                }
                            },
                            error: function (data) {
                                ShowDialog(data, '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " -  Count(s)")');
                            }
                        });
                        //$("#btnSearch").trigger("click");
                    });

                    $('#ItemTable tbody').on('click', 'input[type="checkbox"]', function (e) {
                        var $row = $(this).closest('tr');

                        // Get row data
                        var data = datatable.row($row).data();

                        // Get row ID
                        var rowId = data[0];

                        // Determine whether row ID is in the list of selected row IDs 
                        var index = $.inArray(rowId, rows_selected);

                        // If checkbox is checked and row ID is not in list of selected row IDs
                        if (this.checked && index === -1) {
                            rows_selected.push(rowId);

                            // Otherwise, if checkbox is not checked and row ID is in list of selected row IDs
                        } else if (!this.checked && index !== -1) {
                            rows_selected.splice(index, 1);
                        }

                        if (this.checked) {
                            $row.addClass('selected');
                        } else {
                            $row.removeClass('selected');
                        }

                        // Update state of "Select all" control
                        updateDataTableSelectAllCtrl(datatable);

                        // Prevent click event from propagating to parent
                        e.stopPropagation();
                    });

                    // Handle click on table cells with checkboxes
                    $('#ItemTable').on('click', 'tbody td:first-child, thead th:first-child', function (e) {
                        $(this).parent().find('input[type="checkbox"]').trigger('click');
                    });

                    $('thead input[name="select_all"]', datatable.table().container()).on('click', function (e) {
                        if (this.checked) {
                            $('#ItemTable tbody input[type="checkbox"]:not(:checked)').trigger('click');
                        } else {
                            $('#ItemTable tbody input[type="checkbox"]:checked').trigger('click');
                        }

                        // Prevent click event from propagating to parent
                        e.stopPropagation();
                    });

                    datatable.on('draw', function () {
                        // Update state of "Select all" control
                        updateDataTableSelectAllCtrl(datatable);
                    });

        });


        function updateDataTableSelectAllCtrl(table) {
            var $table = table.table().node();
            var $chkbox_all = $('tbody input[type="checkbox"]', $table);
            var $chkbox_checked = $('tbody input[type="checkbox"]:checked', $table);
            var chkbox_select_all = $('thead input[name="select_all"]', $table).get(0);

            // If none of the checkboxes are checked
            if ($chkbox_checked.length === 0) {
                chkbox_select_all.checked = false;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If all of the checkboxes are checked
            } else if ($chkbox_checked.length === $chkbox_all.length) {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = false;
                }

                // If some of the checkboxes are checked
            } else {
                chkbox_select_all.checked = true;
                if ('indeterminate' in chkbox_select_all) {
                    chkbox_select_all.indeterminate = true;
                }
            }
        }



        function GetSearchItem() {

            var allocsource = $('#ddlAllocationSource').val();
            var filter = $("#ddlFilterSource").val();
            var countId = $("#ddlCounts").val();
            var teamId = $("#ddlTeams").val();
            var SearchField = $("#ddlSearchField").val();
            var searchCriteria = $("#txtSearch").val();


            if (allocsource === "0") {
               ShowDialog('@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.SelectAllocationSource)', '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Search)');
                //alert("Kindly select a source to allocate item(s)");
            }
            else {
                 datatable = $("#ItemTable").DataTable({
                     "destroy": true,
                     "lengthMenu": [[-1,10, 25, 50], ["All",10,25,50]],
                        "ajax": {
                            "url": "/StockCount/GetSearchItem",
                            "data": { TeamID: '@Convert.ToInt32(Session["TeamID"])', source: allocsource, filter: filter, PrevCount: countId, PrevTeam: teamId, searchfield: SearchField, searchcriteria: searchCriteria },
                            "type": "GET",
                            "datatype": "json"
                        },
                        'columnDefs': [
                            {
                                'targets': [0],
                                'searchable': false,
                                'orderable': false,
                                'width': '1%',
                                'className': 'datatable_col1PercR',
                                'data' : "ID",
                                'render': function (data, type, full, meta) {
                                    return '<input type="checkbox"><input id="ID" type="hidden" value="'+ data +'" />';
                                }
                            },
                            {
                                'targets': [1],
                                'data': "ItemNo",
                                'searchable': true,
                                'className': 'datatable_col10PercR'
                            },
                            {
                                'targets': [2],
                                'searchable':false,
                                'data': "Description",
                                'className': 'datatable_col59PercR'
                            },
                            {
                                'targets': [3],
                                'data': "ZoneCode",
                                'searchable': true,
                                'className': 'datatable_col10PercR'
                            },
                            {
                                'targets': [4],
                                'data': "BinCode",
                                'searchable': true,
                                'className': 'datatable_col10PercR'
                            },
                            {
                                'targets': [5],
                                'data': "LotNo",
                                'searchable': false,
                                'className': 'datatable_col10PercR'
                            },
                            {
                                'targets': [6],
                                'data': "ID",
                                'visible': false,
                                'className': 'datatable_col10PercR'
                            }
                        ],
                        'select': {
                            'style': 'multi'
                        },
                        'order': [[1, 'asc']],
                        //"columns": [
                            
                        //    { "data": "ItemNo", "orderable": false, "searchable": true },
                        //    { "data": "Description", "orderable": false, "searchable": true },
                        //    { "data": "ZoneCode", "orderable": false, "searchable": true },
                        //    { "data": "BinCode", "orderable": false, "searchable": true },
                        //    { "data": "LotNo", "orderable": false, "searchable": false }
                        //],
                       
                        "aaSorting": [[4, "desc"]],
                        "responsive": true,
                        "language": {
                            "emptyTable": "No Items found for the selected selections"
                        }
                    });
            }
        }

        function AllocateIems() {

            var e = $("#SearchSection");

            if (e.is(':disabled')) {
                $('<div></div>').appendTo('body').html("<div><h5>Save Operation already in progress, Kindly please wait for it to complete.</h5></div>").dialog({
                    modal: true, title: '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)', zIndex: 10000, autoOpen: true,
                    width: 'auto', resizable: false, closeOnEscape: false,
                    buttons: { Ok: function () { $(this).dialog("close"); }  },
                    close: function (event, ui) {
                        $(this).remove();
                    }
                });
                return;
            }

            var count = 0;
            var TeamID = '@Convert.ToInt32(Session["TeamID"])';
            //var itemid = 0;
            var RowID = [];

            $("#SearchSection").prop('disabled', true);

            $('#ItemTable tbody').find('tr').each(function () {
                var row = $(this);
                if (row.find('input[type="checkbox"]').is(':checked')) {
                    count++;
                }
            });

            if (count > 0) {

                $('<div></div>').appendTo('body')
                    .html("<div><h5>" + "@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAllocateSelectedItem)" + "</h5></div>")
                    .dialog({
                        modal: true, title: '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)', zIndex: 10000, autoOpen: true,
                        width: 'auto', resizable: false, closeOnEscape: false,
                        buttons: {
                            Yes: function () {
                                RowID.length = count;
                                //alert(RowID.length);
                                count = 0;
                                var colcount = 0; var rowdata = '';
                                var data = datatable.rows().data();
                                //console.log(data);

                                    $('#ItemTable tbody').find('tr').each(function () {
                                        var row = $(this);
                                        if (row.find('input[type="checkbox"]').is(':checked')) {
                                            //itemid = row.find('input[type="hidden"]').val();
                                            RowID[count] = row.find('input[type="hidden"]').val();
                                            count++;
                                        }
                                    });

                                    $.ajax({
                                        url: "/StockCount/AllocateItems?TeamID=" + TeamID + "&ID=" + RowID,
                                        type: "GET",
                                        dataType: "json",
                                        //data: { TeamID : TeamID,ID : RowID },
                                        success: function (data) {
                                            if (data.success) {
                                                @*ShowDialog(data.message, '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)');*@
                                                $("#SearchSection").prop('disabled', false);
                                                $('<div></div>').appendTo('body')
                                                    .html("<div><h5>" + data.message + "</h5></div>")
                                                    .dialog({
                                                        modal: true, title: '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)', zIndex: 10000, autoOpen: true, width: 500, resizable: true,
                                                        buttons: { Ok: function () { $(this).dialog("close"); window.location.href = "/StockCount/AdminSTockCountSheet?TeamID=" + TeamID; } }
                                                    });
                                            }
                                            else {
                                                ShowDialog(data.message, '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)');
                                                $("#SearchSection").prop('disabled', false);
                                                //alert(data.message);
                                            }
                                        }
                                    });
                            },
                            No: function () {
                                $(this).dialog("close");
                            }
                        }
                    });
                

                
                
            }
            else {
                ShowDialog('@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgSelectItemForAllocation)', '@Html.Raw(TWI.InventoryAutomated.Resources.GlobalResource.MsgAdminSheetTitle + " - " + TWI.InventoryAutomated.Resources.GlobalResource.Save)');
                $("#SearchSection").prop('disabled', false);
                //alert("Kindly select atleast one item for allocation");
            }
        }

        function ShowDialog(message,formtitle) {
             $('<div></div>').appendTo('body')
                .html("<div><h5>" + message + "</h5></div>")
                .dialog({ modal: true, title: formtitle, zIndex: 10000, autoOpen: true, width: 500, resizable: true,
                          buttons: { Ok: function () { $(this).dialog("close"); } }
                });
        }





    </script>
}
