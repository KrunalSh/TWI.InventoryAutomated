@model TWI.InventoryAutomated.Models.Permission
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Permission", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ID)
    <div class="form-group">
        @Html.LabelFor(model => model.PermissionDesc, TWI.InventoryAutomated.Resources.GlobalResource.PermissionName, new { @class = "control-label" })
        <span class="requiredfield">*</span>
        @Html.EditorFor(model => model.PermissionDesc, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.PermissionDesc)
    </div>
    <div class="form-group txtNotification">
        @{
            var IsActive = true;
            if (Model.IsActive != null)
            { IsActive = (bool)Model.IsActive; }
        }
        @Html.CheckBoxFor(x => IsActive)
        @Html.LabelFor(model => model.IsActive, TWI.InventoryAutomated.Resources.GlobalResource.Active, new { @class = "control-label" })
    </div>
    <br />
    <br />

    <div class="form-group">
        <input type="submit" value="@TWI.InventoryAutomated.Resources.GlobalResource.Save" class="btn btn-primary" />
        <input type="reset" value="@TWI.InventoryAutomated.Resources.GlobalResource.Cancel" class="btn" onclick="Cancelbutton();" />
    </div>
}