@model TWI.InventoryAutomated.Models.Language
@{
    Layout = null;
}

@using (Html.BeginForm("AddOrEdit", "Language", FormMethod.Post, new { onsubmit = "return SubmitForm(this)" }))
{
    @Html.HiddenFor(model => model.ID)
    <div class="txtNotification"></div>
    <div class="form-group">
        @Html.LabelFor(model => model.Code, new { @class = "control-label" })
        <span class="requiredfield">*</span>
        @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Code)
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Description, new { @class = "control-label" })
        <span class="requiredfield">*</span>
        @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
        @Html.ValidationMessageFor(model => model.Description)
    </div>
    <div class="form-group ">
        @{
            var IsActive = true;
            if (Model.IsActive != null)
            { IsActive = (bool)Model.IsActive; }
        }
        @Html.CheckBoxFor(x => IsActive)
        @Html.LabelFor(model => model.IsActive, new { @class = "control-label" })
    </div>
    
    <div class="form-group">
        <input type="submit" value="Save" class="btn btn-primary" />
        <input type="reset" value="Cancel" class="btn" onclick="Cancelbutton();" />
    </div>
}